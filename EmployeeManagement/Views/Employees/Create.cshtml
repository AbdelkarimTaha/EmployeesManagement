@using EmployeeManagement.Resources
@using EmployeeManagement.Models
@model EmployeeManagement.Models.Employee

@{
    ViewBag.Title = (ViewBag.Update == true) ? Language.Update : Language.Create;
}

<h2>@((ViewBag.Update == true) ? Language.Update : Language.Create)</h2>


@using (Html.BeginForm("Create", "Employees", FormMethod.Post))
{
    <div class="form-group">
        @Html.LabelFor(m => m.FirstName)
        @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.LastName)
        @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.FullName)
        @Html.TextBoxFor(m => m.FullName, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.FullName, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Salary)
        @Html.TextBoxFor(m => m.Salary, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Email)
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Password)
        @Html.TextBoxFor(m => m.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.BirthDate)
        @Html.TextBoxFor(m => m.BirthDate, new { @class = "form-control", @type = "date" })
        @Html.ValidationMessageFor(model => model.BirthDate, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.City)
        @Html.DropDownList("City",
                            new SelectList(Enum.GetValues(typeof(City))),
                            Language.SelectYourCity,
                            new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.JobTitle)
        @Html.DropDownList("JobTitle",
                            new SelectList(Enum.GetValues(typeof(JobTitle))),
                            Language.SelectYourjobtitle,
                            new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Department)
        @Html.DropDownList("Department",
                            new SelectList(Enum.GetValues(typeof(Department))),
                            Language.SelectYourDepartment,
                            new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(m => m.Branch)
        @Html.DropDownList("Branch",
                            new SelectList(Enum.GetValues(typeof(Branch))),
                            Language.SelectYourBranch,
                            new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
    </div>

    @Html.AntiForgeryToken()
    <input type="submit" value="@Language.Create" class="btn btn-primary" />
}
